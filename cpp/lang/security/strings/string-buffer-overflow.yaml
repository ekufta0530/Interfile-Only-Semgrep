rules:
- id: string-buffer-overflow
  message: '`$STR_FUNCTION` does not validate the length of the source string which
    can trigger a buffer overflow'
  severity: ERROR
  metadata:
    likelihood: LOW
    impact: HIGH
    confidence: LOW
    category: security
    subcategory:
    - audit
    cert:
    - ARR38-C
    - C
    - C++
    - L1
    cwe:
    - 'CWE-120: Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')'
    references:
    - https://wiki.sei.cmu.edu/confluence/display/c/ARR38-C.+Guarantee+that+library+functions+do+not+form+invalid+pointers
    supersedes:
    - c.lang.security.insecure-use-strcat-fn.insecure-use-strcat-fn
    - c.lang.security.insecure-use-string-copy-fn.insecure-use-string-copy-fn
    technology:
    - cpp
  languages:
  - cpp
  - c
  mode: taint
  min-version: 1.59.0
  options:
    interfile: true
  pattern-sources:
  - label: USER_CONTROLLED
    patterns:
    - pattern: "int main(int $ARGC, $ARGV_TY $ARGV, $ENVP_TY $ENVP) {\n  ...\n}\n"
    - focus-metavariable: $ENVP
  - label: USER_CONTROLLED
    patterns:
    - pattern: "int main(int $ARGC, $ARGV_TY $ARGV, ...) {\n  ...\n}\n"
    - focus-metavariable: $ARGV
  - label: USER_CONTROLLED
    pattern-either:
    - pattern: getenv(...)
    - pattern: std::getenv(...)
    - pattern: readline()
  - by-side-effect: only
    label: USER_CONTROLLED
    patterns:
    - pattern-either:
      - pattern: gets($SRC)
      - pattern: fread($SRC, ...)
      - pattern: fgets($SRC, ...)
      - pattern: getline($SRC, ...)
      - pattern: getdelim($SRC, ...)
      - pattern: read($S_OR_FP, $SRC, ...)
      - pattern: msgrcv($QID, $SRC, ...)
    - focus-metavariable: $SRC
  - label: USER_CONTROLLED
    pattern: gets(...)
  - by-side-effect: only
    label: USER_CONTROLLED
    patterns:
    - pattern-either:
      - pattern: $X.get($SRC, ...)
      - pattern: $X.getline($SRC, ...)
      - pattern: $X.read($SRC, ...)
      - pattern: $X.readsome($SRC, ...)
    - metavariable-type:
        metavariable: $X
        types:
        - basic_ifstream<$TYPE>
        - std::basic_ifstream<$TYPE>
        - ifstream
        - std::ifstream
        - wifstream
        - std::wifstream
        - basic_ofstream<$TYPE>
        - std::basic_ofstream<$TYPE>
        - ofstream
        - std::ofstream
        - wofstream
        - std::wofstream
        - basic_fstream<$TYPE>
        - std::basic_fstream<$TYPE>
        - fstream
        - std::fstream
        - wfstream
        - std::wfstream
        - basic_filebuf<$TYPE>
        - std::basic_filebuf<$TYPE>
        - filebuf
        - std::filebuf
        - wfilebuf
        - std::wfilebuf
    - focus-metavariable: $SRC
  - by-side-effect: only
    label: USER_CONTROLLED
    patterns:
    - pattern-either:
      - pattern: recv($S, $SRC, ...)
      - pattern: recvfrom($S, $SRC, ...)
      - pattern: recvmsg($S, $SRC, ...)
      - patterns:
        - pattern: curl_easy_setopt($CURL, CURLOPT_WRITEDATA, $SRC)
        - pattern-not: curl_easy_setopt($CURL, CURLOPT_WRITEDATA, $CURL)
    - focus-metavariable: $SRC
  - label: USER_CONTROLLED
    pattern: mysql_fetch_row(...)
  - by-side-effect: only
    label: USER_CONTROLLED
    patterns:
    - pattern: mysql_fetch_row_nonblocking($RESULT, &$ROW)
    - focus-metavariable: $ROW
  - label: USER_CONTROLLED
    patterns:
    - pattern: $WT->body()
    - metavariable-type:
        metavariable: $WT
        types:
        - Wt::Http::Message*
        - Http::Message*
        - Wt::Mail::Message*
        - Mail::Message*
  - by-side-effect: true
    label: SANITIZED
    patterns:
    - pattern: $FUNCTION(..., $STR, ...)
    - metavariable-regex:
        metavariable: $FUNCTION
        regex: ^.*(capacity|len|size).*$
    - focus-metavariable: $STR
  - by-side-effect: true
    label: SANITIZED
    patterns:
    - pattern: $STR.$FUNCTION(...)
    - metavariable-regex:
        metavariable: $FUNCTION
        regex: ^.*(capacity|len|size).*$
    - focus-metavariable: $STR
  pattern-sinks:
  - patterns:
    - pattern: $STR_FUNCTION($DEST, $SRC)
    - metavariable-regex:
        metavariable: $STR_FUNCTION
        regex: ^((std)?(::))?(strcpy|strcat)$
    - focus-metavariable: $SRC
    requires: USER_CONTROLLED and not SANITIZED
