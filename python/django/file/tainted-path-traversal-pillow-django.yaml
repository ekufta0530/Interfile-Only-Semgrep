rules:
- id: tainted-path-traversal-pillow-django
  message: The application builds a file path from potentially untrusted data, which
    can lead to a path traversal vulnerability. An attacker can manipulate the path
    which the application uses to access files. If the application does not validate
    user input and sanitize file paths, sensitive files such as configuration or user
    data can be accessed, potentially creating or overwriting files. To prevent this
    vulnerability, validate and sanitize any input that is used to create references
    to file paths. Also, enforce strict file access controls. For example, choose
    privileges allowing public-facing applications to access only the required files.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path
      Traversal'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - file::sink::file-access::pillow
    - web::source::cookie::django_rest_frameworkapi
    - web::source::form-data::django_rest_frameworkapi
    - web::source::header::django_rest_frameworkapi
    - web::source::http-body::django_rest_frameworkapi
    - web::source::http-params::django_rest_frameworkapi
    - web::source::url-path-params::django_rest_frameworkapi
    owasp:
    - A01:2021 - Broken Access Control
    - A05:2017 - Broken Access Control
    references:
    - https://docs.pyfilesystem.org/en/latest/guide.html#opening-filesystems
    - https://owasp.org/Top10/A01_2021-Broken_Access_Control
    - https://owasp.org/www-community/attacks/Path_Traversal
    - https://portswigger.net/web-security/file-path-traversal
    - https://www.stackhawk.com/blog/django-path-traversal-guide-examples-and-prevention/
    technology:
    - PIL
    - django_rest_frameworkapi
    - pillow
    - web
  languages:
  - python
  mode: taint
  options:
    interfile: true
    symbolic_propagation: true
    taint_assume_safe_booleans: true
    taint_assume_safe_numbers: true
  pattern-sources:
  - label: __SOURCE__
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $DJANGO_REQUEST.query_params
        - pattern: $DJANGO_REQUEST.stream
        - pattern: $DJANGO_REQUEST.content_type
        - pattern: $DJANGO_REQUEST.data
        - pattern: $DJANGO_REQUEST.user_agent_string
        - pattern: $DJANGO_REQUEST.user_agent
        - pattern: $DJANGO_REQUEST.body
        - pattern: $DJANGO_REQUEST.headers
        - pattern: $DJANGO_REQUEST.path
        - pattern: $DJANGO_REQUEST.path_info
        - pattern: $DJANGO_REQUEST.META
        - pattern: $DJANGO_REQUEST.REQUEST
        - pattern: $DJANGO_REQUEST.GET
        - pattern: $DJANGO_REQUEST.POST
        - pattern: $DJANGO_REQUEST.FILES
        - pattern: $DJANGO_REQUEST.DATA
        - pattern: $DJANGO_REQUEST.QUERY_PARAMS
        - pattern: $DJANGO_REQUEST.COOKIES
        - pattern: $DJANGO_REQUEST.get_host()
        - pattern: $DJANGO_REQUEST.get_full_path(...)
        - pattern: $DJANGO_REQUEST.get_full_path_info(...)
        - pattern: $DJANGO_REQUEST.get_raw_uri(...)
        - pattern: $DJANGO_REQUEST.encoding(...)
        - pattern: $DJANGO_REQUEST.body(...)
        - pattern: $DJANGO_REQUEST.read(...)
        - pattern: $DJANGO_REQUEST.readline()
        - pattern: $DJANGO_REQUEST.readlines()
        - pattern: $DJANGO_REQUEST.get_signed_cookie(...)
    requires: DJANGO_REQUEST
  - label: DJANGO_REQUEST
    patterns:
    - patterns:
      - pattern-either:
        - pattern: "@rest_framework.decorators.api_view(...)\ndef $FUNC($DJANGO_REQUEST,\
            \ ...):\n  ...\n"
        - patterns:
          - pattern: "class $CLS($PARENT_CLASS):\n    ...\n    def $FUNC(self, $DJANGO_REQUEST,\
              \ ...):\n      ...\n"
          - metavariable-regex:
              metavariable: $PARENT_CLASS
              regex: ^rest_framework\.+
          - metavariable-regex:
              metavariable: $FUNC
              regex: get|post|put|patch|delete|head|options|dispatch|initial|throttled|retrieve|update|partial_update|destroy|list|create
      - focus-metavariable: $DJANGO_REQUEST
  pattern-propagators:
  - from: $DEFAULT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$DICT[$KEY]

            ...

            '
        - pattern-inside: '$DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$DICT = { ... }

            ...

            '
        - pattern-inside: '$DICT = dict(...)

            ...

            '
      - pattern-either:
        - pattern: $DICT.get($FIELD, $DEFAULT)
        - pattern: $DICT.setdefault($KEY, $DEFAULT)
    to: $DICT
  - from: $FROM_DICT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$TO_DICT[$KEY]

            ...

            '
        - pattern-inside: '$TO_DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$TO_DICT = { ... }

            ...

            '
        - pattern-inside: '$TO_DICT = dict(...)

            ...

            '
        - pattern-inside: '$FROM_DICT[$KEY]

            ...

            '
        - pattern-inside: '$FROM_DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$FROM_DICT = { ... }

            ...

            '
        - pattern-inside: '$FROM_DICT = dict(...)

            ...

            '
      - pattern-either:
        - pattern: $TO_DICT.update($FROM_DICT)
        - pattern: $TO_DICT | $FROM_DICT
        - pattern: $TO_DICT |= $FROM_DICT
    to: $TO_DICT
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$LIST = [ ... ]

            ...

            '
        - pattern-inside: '$LIST = list(...)

            ...

            '
      - pattern-either:
        - pattern: $LIST.append($FROM)
        - pattern: $LIST.extend($FROM)
        - pattern: $LIST.insert($INDEX, $FROM)
    to: $LIST
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $FROM.$LOG($SINK, ...)
        - pattern: $FROM.$LOG(..., msg=$SINK, ...)
        - pattern: $APP.logger.$LOG($SINK, ...)
      - metavariable-regex:
          metavariable: $LOG
          regex: ^(info|warning|error|critical|log|exception|handle)$
    to: $SINK
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$SET = { $ITEM, ... }

            ...

            '
        - pattern-inside: '$SET = set(...)

            ...

            '
        - pattern-inside: '$OTHERSET = { $ITEM, ... }

            ...

            '
        - pattern-inside: '$OTHERSET = set(...)

            ...

            '
      - pattern-either:
        - pattern: $SET.update(..., $FROM, ...)
        - pattern: $SET.intersection_update(..., $FROM, ...)
        - pattern: $SET.difference_update(..., $FROM, ...)
        - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
        - pattern: $SET.add($FROM)
        - pattern: $SET |= $FROM
        - pattern: $SET &= $FROM
        - pattern: $SET -= $FROM
        - pattern: $SET ^= $FROM
    to: $SET
  - from: $FORM
    patterns:
    - pattern: $FORM.populate_obj($OBJ)
    to: $OBJ
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: PIL.Image.open($SINK, ...)
      - pattern: PIL.Image.open(..., fp=$SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransform($SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransform(..., inputProfile=$SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransform($ARG_1, $SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransform(..., outputProfile=$SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransform($ARG_1, $ARG_2, $SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransform(..., proofProfile=$SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransformFromOpenProfiles($SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransformFromOpenProfiles(..., inputProfile=$SINK,
          ...)
      - pattern: PIL.ImageCms.buildProofTransformFromOpenProfiles($ARG_1, $SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransformFromOpenProfiles(..., outputProfile=$SINK,
          ...)
      - pattern: PIL.ImageCms.buildProofTransformFromOpenProfiles($ARG_1, $ARG_2,
          $SINK, ...)
      - pattern: PIL.ImageCms.buildProofTransformFromOpenProfiles(..., proofProfile=$SINK,
          ...)
      - pattern: PIL.ImageCms.buildTransform($SINK, ...)
      - pattern: PIL.ImageCms.buildTransform(..., inputProfile=$SINK, ...)
      - pattern: PIL.ImageCms.buildTransform($ARG_1, $SINK, ...)
      - pattern: PIL.ImageCms.buildTransform(..., outputProfile=$SINK, ...)
      - pattern: PIL.ImageCms.buildTransformFromOpenProfiles($SINK, ...)
      - pattern: PIL.ImageCms.buildTransformFromOpenProfiles(..., inputProfile=$SINK,
          ...)
      - pattern: PIL.ImageCms.buildTransformFromOpenProfiles($ARG_1, $SINK, ...)
      - pattern: PIL.ImageCms.buildTransformFromOpenProfiles(..., outputProfile=$SINK,
          ...)
      - pattern: PIL.ImageCms.profileToProfile($SINK, ...)
      - pattern: PIL.ImageCms.profileToProfile(..., inputProfile=$SINK, ...)
      - pattern: PIL.ImageCms.profileToProfile($ARG_1, $SINK, ...)
      - pattern: PIL.ImageCms.profileToProfile(..., outputProfile=$SINK, ...)
      - pattern: PIL.ImageCms.getOpenProfile($SINK, ...)
      - pattern: PIL.ImageCms.getOpenProfile(..., profileFilename=$SINK, ...)
      - pattern: PIL.ImageCms.getDefaultIntent($SINK, ...)
      - pattern: PIL.ImageCms.getDefaultIntent(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.getProfileCopyright($SINK, ...)
      - pattern: PIL.ImageCms.getProfileCopyright(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.getProfileDescription($SINK, ...)
      - pattern: PIL.ImageCms.getProfileDescription(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.getProfileInfo($SINK, ...)
      - pattern: PIL.ImageCms.getProfileInfo(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.getProfileManufacturer($SINK, ...)
      - pattern: PIL.ImageCms.getProfileManufacturer(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.getProfileModel($SINK, ...)
      - pattern: PIL.ImageCms.getProfileModel(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.getProfileName($SINK, ...)
      - pattern: PIL.ImageCms.getProfileName(..., profile=$SINK, ...)
      - pattern: PIL.ImageCms.isIntentSupported($SINK, ...)
      - pattern: PIL.ImageCms.isIntentSupported(..., profile=$SINK, ...)
      - pattern: PIL.ImageFont.load($SINK, ...)
      - pattern: PIL.ImageFont.load(..., filename=$SINK, ...)
      - pattern: PIL.ImageFont.load_path($SINK, ...)
      - pattern: PIL.ImageFont.load_path(..., filename=$SINK, ...)
      - pattern: PIL.ImageFont.truetype($SINK, ...)
      - pattern: PIL.ImageFont.truetype(..., font=$SINK, ...)
      - pattern: PIL.TarIO.TarIO($SINK, ...)
      - pattern: PIL.TarIO.TarIO(..., tarfile=$SINK, ...)
      - pattern: PIL.WalImageFile.WalImageFile($SINK, ...)
      - pattern: PIL.WalImageFile.WalImageFile(..., fp=$SINK, ...)
      - pattern: PIL.ImageTk.PhotoImage(..., file=$SINK, ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern: PIL.$FCLASS.$IMAGE($SINK, ...)
      - pattern: PIL.$FCLASS.$IMAGE(..., fp=$SINK, ...)
      - pattern: PIL.$FCLASS.$IMAGE($ARG_1, $SINK, ...)
      - pattern: PIL.$FCLASS.$IMAGE(..., filename=$SINK, ...)
    - metavariable-pattern:
        metavariable: $FCLASS
        patterns:
        - patterns:
          - pattern-either:
            - pattern: BmpImagePlugin
            - pattern: BufrStubImagePlugin
            - pattern: CurImagePlugin
            - pattern: DcxImagePlugin
            - pattern: DdsImagePlugin
            - pattern: EpsImagePlugin
            - pattern: FitsImagePlugin
            - pattern: FliImagePlugin
            - pattern: FpxImagePlugin
            - pattern: GbrImagePlugin
            - pattern: GifImagePlugin
            - pattern: GribStubImagePlugin
            - pattern: Hdf5StubImagePlugin
            - pattern: IcnsImagePlugin
            - pattern: IcoImagePlugin
            - pattern: ImImagePlugin
            - pattern: ImtImagePlugin
            - pattern: IptcImagePlugin
            - pattern: JpegImagePlugin
            - pattern: Jpeg2KImagePlugin
            - pattern: McIdasImagePlugin
            - pattern: MicImagePlugin
            - pattern: MpegImagePlugin
            - pattern: MspImagePlugin
            - pattern: PcdImagePlugin
            - pattern: PcxImagePlugin
            - pattern: PixarImagePlugin
            - pattern: PngImagePlugin
            - pattern: PpmImagePlugin
            - pattern: PsdImagePlugin
            - pattern: SgiImagePlugin
            - pattern: SpiderImagePlugin
            - pattern: SunImagePlugin
            - pattern: TgaImagePlugin
            - pattern: TiffImagePlugin
            - pattern: WebPImagePlugin
            - pattern: WmfImagePlugin
            - pattern: XVThumbImagePlugin
            - pattern: XbmImagePlugin
            - pattern: XpmImagePlugin
    - metavariable-pattern:
        metavariable: $IMAGE
        patterns:
        - patterns:
          - pattern-either:
            - pattern: BitStream
            - pattern: BmpImageFile
            - pattern: BoxReader
            - pattern: BufrStubImageFile
            - pattern: ChunkStream
            - pattern: CurImageFile
            - pattern: DcxImageFile
            - pattern: DdsImageFile
            - pattern: DibImageFile
            - pattern: EpsImageFile
            - pattern: FitsImageFile
            - pattern: FliImageFile
            - pattern: FpxImageFile
            - pattern: GbrImageFile
            - pattern: GifImageFile
            - pattern: GribStubImageFile
            - pattern: HDF5StubImageFile
            - pattern: IcnsImageFile
            - pattern: IcoImageFile
            - pattern: ImImageFile
            - pattern: ImtImageFile
            - pattern: IptcImageFile
            - pattern: Jpeg2KImageFile
            - pattern: JpegImageFile
            - pattern: McIdasImageFile
            - pattern: MicImageFile
            - pattern: MpegImageFile
            - pattern: MspImageFile
            - pattern: PcdImageFile
            - pattern: PcxImageFile
            - pattern: PixarImageFile
            - pattern: PngImageFile
            - pattern: PngStream
            - pattern: PpmImageFile
            - pattern: PsdImageFile
            - pattern: PSFile
            - pattern: SgiImageFile
            - pattern: SpiderImageFile
            - pattern: SunImageFile
            - pattern: TgaImageFile
            - pattern: TiffImageFile
            - pattern: WebPImageFile
            - pattern: WmfStubImageFile
            - pattern: XbmImageFile
            - pattern: XpmImageFile
            - pattern: XVThumbImageFile
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern-inside: "class $CLS:\n  ...\n  $IMG: PIL.Image\n  ...\n"
      - pattern-inside: "class $CLS:\n  ...\n  $IMG: PIL.Image = ...\n  ...\n"
      - pattern-inside: "class $IMG(..., PIL.Image, ...):\n  ...\n...\n"
      - pattern-inside: "def $FUN(..., $IMG: PIL.Image, ...):\n  ...\n"
      - pattern-inside: '$IMG: PIL.Image

          ...

          '
      - pattern-inside: '$IMG: PIL.Image = ...

          ...

          '
      - pattern-inside: "if isinstance($IMG, PIL.Image):\n  ...\n"
      - pattern-inside: "if isinstance($IMG, (..., PIL.Image, ...)):\n  ...\n"
      - pattern-inside: "if type($IMG) == PIL.Image:\n  ...\n"
      - pattern-inside: "class $CLS:\n  ...\n  $IMG: PIL.Image.Image\n  ...\n"
      - pattern-inside: "class $CLS:\n  ...\n  $IMG: PIL.Image.Image = ...\n  ...\n"
      - pattern-inside: "class $IMG(..., PIL.Image.Image, ...):\n  ...\n...\n"
      - pattern-inside: "def $FUN(..., $IMG: PIL.Image.Image, ...):\n  ...\n"
      - pattern-inside: '$IMG: PIL.Image.Image

          ...

          '
      - pattern-inside: '$IMG: PIL.Image.Image = ...

          ...

          '
      - pattern-inside: "if isinstance($IMG, PIL.Image.Image):\n  ...\n"
      - pattern-inside: "if isinstance($IMG, (..., PIL.Image.Image, ...)):\n  ...\n"
      - pattern-inside: "if type($IMG) == PIL.Image.Image:\n  ...\n"
      - pattern-inside: '$IMG = PIL.Image(...)

          ...

          '
      - pattern-inside: '$IMG = PIL.Image.Image(...)

          ...

          '
      - pattern-inside: '$IMG = PIL.Image.open(...)

          ...

          '
      - pattern-inside: '$IMG = PIL.Image.new(...)

          ...

          '
      - pattern-inside: '$IMG = PIL.Image.frombytes(...)

          ...

          '
    - pattern-either:
      - pattern: $IMG.save($SINK, ...)
      - pattern: $IMG.save(..., fp=$SINK, ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern-inside: "class $CLS:\n  ...\n  $IMG: PIL.ImageMorph.MorphOp\n  ...\n"
      - pattern-inside: "class $CLS:\n  ...\n  $IMG: PIL.ImageMorph.MorphOp = ...\n\
          \  ...\n"
      - pattern-inside: "class $IMG(..., PIL.ImageMorph.MorphOp, ...):\n  ...\n...\n"
      - pattern-inside: "def $FUN(..., $IMG: PIL.ImageMorph.MorphOp, ...):\n  ...\n"
      - pattern-inside: '$IMG: PIL.ImageMorph.MorphOp

          ...

          '
      - pattern-inside: '$IMG: PIL.ImageMorph.MorphOp = ...

          ...

          '
      - pattern-inside: "if isinstance($IMG, PIL.ImageMorph.MorphOp):\n  ...\n"
      - pattern-inside: "if isinstance($IMG, (..., PIL.ImageMorph.MorphOp, ...)):\n\
          \  ...\n"
      - pattern-inside: "if type($IMG) == PIL.ImageMorph.MorphOp:\n  ...\n"
      - pattern-inside: '$IMG = PIL.ImageMorph.MorphOp(...)

          ...

          '
    - pattern-either:
      - pattern: $IMG.load_lut($SINK, ...)
      - pattern: $IMG.load_lut(..., filename=$SINK, ...)
      - pattern: $IMG.save_lut($SINK, ...)
      - pattern: $IMG.save_lut(..., filename=$SINK, ...)
    - focus-metavariable: $SINK
  pattern-sanitizers:
  - patterns:
    - pattern-either:
      - pattern: int(...)
      - pattern: bool(...)
      - pattern: float(...)
      - pattern: complex(...)
      - pattern: oct(...)
      - pattern: hex(...)
      - pattern: bin(...)
      - pattern: round(...)
      - pattern: id(...)
      - pattern: hash(...)
      - pattern: len(...)
      - pattern: type(...)
  - patterns:
    - pattern-either:
      - pattern-inside: '$DICT[$KEY]

          ...

          '
      - pattern-inside: '$DICT = { $KEY: $VALUE for ... in ...}

          ...

          '
      - pattern-inside: '$DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$DICT = { }

          ...

          '
      - pattern-inside: '$DICT = { $KEY: $VALUE, ... }

          ...

          '
      - pattern-inside: '$DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $DICT.clear()
      - pattern: $DICT.len()
  - patterns:
    - pattern-either:
      - pattern-inside: '$LIST = [ ... ]

          ...

          '
      - pattern-inside: '$LIST = list(...)

          ...

          '
    - pattern-either:
      - pattern: $LIST.clear()
      - pattern: $LIST.count(...)
      - pattern: $LIST.index(...)
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.len()
      - pattern: $SET.clear()
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = { $ITEM for ... in ...}

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
      - pattern-inside: '$SET = frozenset(...)

          ...

          '
      - pattern-inside: '$OTHERSET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$OTHERSET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.isdisjoint($OTHERSET)
      - pattern: $SET.difference($OTHERSET)
      - pattern: $SET.issubset($OTHERSET)
      - pattern: $SET < $OTHERSET
      - pattern: $SET <= $OTHERSET
      - pattern: $SET.issuperset($OTHERSET)
      - pattern: $SET > $OTHERSET
      - pattern: $SET >= $OTHERSET
  - patterns:
    - pattern-either:
      - pattern-inside: '$TUPLE = ( $ITEM, ... )

          ...

          '
      - pattern-inside: '$TUPLE = $ITEM, ...

          ...

          '
      - pattern-inside: '$TUPLE = tuple(...)

          ...

          '
    - pattern-either:
      - pattern: $TUPLE.len()
  - patterns:
    - pattern: werkzeug.utils.secure_filename(...)
