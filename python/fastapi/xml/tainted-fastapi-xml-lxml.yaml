rules:
- id: tainted-fastapi-xml-lxml
  message: The application is using an XML parser that has not been safely configured.
    This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled
    input. An attacker can include document type definitions (DTDs) or XIncludes which
    can interact with internal or external hosts. XXE can lead to other vulnerabilities,
    such as Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side
    request forgery (SSRF), depending on the application configuration. An attacker
    can also use DTDs to expand recursively, leading to a Denial-of-Service (DoS)
    attack, also known as a `Billion Laughs Attack`. The best defense against XXE
    is to have an XML parser that supports disabling DTDs. Limiting the use of external
    entities from the start can prevent the parser from being used to process untrusted
    XML files. Reducing dependencies on external resources is also a good practice
    for performance reasons. It is difficult to guarantee that even a trusted XML
    file on your server or during transmission has not been tampered with by a malicious
    third-party.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-611: Improper Restriction of XML External Entity Reference'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - web::source::cookie::fastapi
    - web::source::form-data::fastapi
    - web::source::header::fastapi
    - web::source::http-body::fastapi
    - web::source::http-params::fastapi
    - web::source::url-path-params::fastapi
    - xml::sink::xml-parser::lxml
    - xml::sink::xpath::lxml
    owasp:
    - A04:2017 - XML External Entities (XXE)
    - A05:2021 - Security Misconfiguration
    references:
    - https://cheatsheetseries.owasp.org/cheatsheets/XML_Security_Cheat_Sheet.html
    - https://github.com/lxml/lxml/blob/master/src/lxml/etree.pyx
    - https://lxml.de/parsing.html
    - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
    - https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing
    technology:
    - fastapi
    - lxml,
    - web
    - xml
    - xpath
  languages:
  - python
  mode: taint
  options:
    interfile: true
    symbolic_propagation: true
    taint_assume_safe_booleans: true
    taint_assume_safe_numbers: true
  pattern-sources:
  - patterns:
    - pattern: "@$APP.$ROUTE(\"$ROUTESTRING\", ...)\nasync def $FUNC(..., $PARAM,\
        \ ...):\n  ...\n"
    - metavariable-comparison:
        comparison: str($PARAM) not in $ROUTESTRING
    - metavariable-regex:
        metavariable: $ROUTE
        regex: ^(websocket|get|put|post|delete|options|head|patch|trace)$
    - metavariable-type:
        metavariable: $PARAM
        types:
        - str | None
        - str
        - Optional[str]
        - typing.Union[str, None]
        - list[str] | None
        - list[str]
        - typing.List[str] | None
        - typing.List[str]
        - typing.Optional[typing.List[str]]
        - typing.Union[list[str], None]
        - fastapi.Query(...)
        - typing.Annotated[...,  fastapi.Query(...)]
        - fastapi.Path(...)
        - typing.Annotated[...,  fastapi.Path(...)]
        - fastapi.Body(...)
        - typing.Annotated[...,  fastapi.Body(...)]
        - fastapi.Cookie(...)
        - typing.Annotated[...,  fastapi.Cookie(...)]
        - fastapi.Header(...)
        - typing.Annotated[...,  fastapi.Header(...)]
        - fastapi.Form(...)
        - typing.Annotated[...,  fastapi.Form(...)]
        - fastapi.File(...)
        - fastapi.UploadFile
        - typing.List[fastapi.UploadFile]
        - list[fastapi.UploadFile]
        - typing.Annotated[...,  fastapi.File(...)]
        - pydantic.BaseModel
        - typing.Annotated[..., fastapi.Cookie()]
        - fastapi.Cookie(...)
        - typing.Annotated[..., fastapi.Header()]
        - fastapi.Header(...)
    - focus-metavariable: $PARAM
  - label: FASTAPI_REQUEST
    patterns:
    - patterns:
      - pattern-either:
        - pattern: "@$APP.middleware(...)\nasync def $FUNC($FASTAPI_REQUEST, ...):\n\
            \  ...\n"
        - patterns:
          - pattern: "def $FUNC(..., $FASTAPI_REQUEST, ...):\n  ...\n"
          - metavariable-type:
              metavariable: $FASTAPI_REQUEST
              types:
              - fastapi.Request
              - fastapi.requests.Request
              - starlette.requests.Request
      - focus-metavariable: $FASTAPI_REQUEST
  - label: __SOURCE__
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $FASTAPI_REQUEST.url.path
        - pattern: $FASTAPI_REQUEST.base_url
        - pattern: $FASTAPI_REQUEST.headers
        - pattern: $FASTAPI_REQUEST.query_params
        - pattern: $FASTAPI_REQUEST.cookies
        - pattern: $FASTAPI_REQUEST.stream()
        - pattern: $FASTAPI_REQUEST.read(...)
        - pattern: $FASTAPI_REQUEST.form(...)
        - pattern: $FASTAPI_REQUEST._get_form(...)
        - pattern: $FASTAPI_REQUEST.body()
        - pattern: $FASTAPI_REQUEST.json()
    requires: FASTAPI_REQUEST
  - patterns:
    - pattern-either:
      - patterns:
        - pattern: "@$APP.$ROUTE(\"$ROUTESTRING\")\nasync def $FUNC(..., $PARAM, ...):\n\
            \  ...\n"
        - metavariable-comparison:
            comparison: str($PARAM) in $ROUTESTRING
        - metavariable-regex:
            metavariable: $ROUTE
            regex: ^(websocket|get|put|post|delete|options|head|patch|trace)$
        - metavariable-type:
            metavariable: $PARAM
            types:
            - str | None
            - str
            - Optional[str]
            - Union[str, None]
            - list[str] | None
            - list[str]
            - Optional[List[str]]
            - Union[list[str], None]
        - focus-metavariable: $PARAM
  - label: FASTAPI_REQUEST
    patterns:
    - patterns:
      - pattern-either:
        - pattern: "@$APP.middleware(...)\nasync def $FUNC($FASTAPI_REQUEST, ...):\n\
            \  ...\n"
        - patterns:
          - pattern: "def $FUNC(..., $FASTAPI_REQUEST, ...):\n  ...\n"
          - metavariable-type:
              metavariable: $FASTAPI_REQUEST
              types:
              - fastapi.Request
              - fastapi.requests.Request
              - starlette.requests.Request
      - focus-metavariable: $FASTAPI_REQUEST
  - label: __SOURCE__
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $FASTAPI_REQUEST.path_params
    requires: FASTAPI_REQUEST
  - label: LXML_ELEMENT
    patterns:
    - pattern-either:
      - pattern: lxml.etree.Element(...)
      - pattern: lxml.etree.XML(...)
      - pattern: lxml.etree.HTML(...)
      - pattern: lxml.etree.parse(...)
      - pattern: lxml.etree.fromstring(...)
      - pattern: lxml.etree.iterparse(...)
  - label: LXML_SECURE_PARSER
    patterns:
    - patterns:
      - patterns:
        - pattern: lxml.etree.XMLParser(...)
        - pattern-not: lxml.etree.XMLParser(..., huge_tree=True, ...)
      - pattern-either:
        - patterns:
          - pattern: lxml.etree.XMLParser(...)
          - pattern-not: lxml.etree.XMLParser(..., no_network=False, ...)
        - patterns:
          - pattern: lxml.etree.XMLParser(..., load_dtd=False, ...)
          - pattern: lxml.etree.XMLParser(..., resolve_entities=False, ...)
  - label: LXML_PARSER
    patterns:
    - pattern: lxml.etree.XMLParser(...)
  pattern-propagators:
  - from: $DEFAULT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$DICT[$KEY]

            ...

            '
        - pattern-inside: '$DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$DICT = { ... }

            ...

            '
        - pattern-inside: '$DICT = dict(...)

            ...

            '
      - pattern-either:
        - pattern: $DICT.get($FIELD, $DEFAULT)
        - pattern: $DICT.setdefault($KEY, $DEFAULT)
    to: $DICT
  - from: $FROM_DICT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$TO_DICT[$KEY]

            ...

            '
        - pattern-inside: '$TO_DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$TO_DICT = { ... }

            ...

            '
        - pattern-inside: '$TO_DICT = dict(...)

            ...

            '
        - pattern-inside: '$FROM_DICT[$KEY]

            ...

            '
        - pattern-inside: '$FROM_DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$FROM_DICT = { ... }

            ...

            '
        - pattern-inside: '$FROM_DICT = dict(...)

            ...

            '
      - pattern-either:
        - pattern: $TO_DICT.update($FROM_DICT)
        - pattern: $TO_DICT | $FROM_DICT
        - pattern: $TO_DICT |= $FROM_DICT
    to: $TO_DICT
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$LIST = [ ... ]

            ...

            '
        - pattern-inside: '$LIST = list(...)

            ...

            '
      - pattern-either:
        - pattern: $LIST.append($FROM)
        - pattern: $LIST.extend($FROM)
        - pattern: $LIST.insert($INDEX, $FROM)
    to: $LIST
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $FROM.$LOG($SINK, ...)
        - pattern: $FROM.$LOG(..., msg=$SINK, ...)
        - pattern: $APP.logger.$LOG($SINK, ...)
      - metavariable-regex:
          metavariable: $LOG
          regex: ^(info|warning|error|critical|log|exception|handle)$
    to: $SINK
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$SET = { $ITEM, ... }

            ...

            '
        - pattern-inside: '$SET = set(...)

            ...

            '
        - pattern-inside: '$OTHERSET = { $ITEM, ... }

            ...

            '
        - pattern-inside: '$OTHERSET = set(...)

            ...

            '
      - pattern-either:
        - pattern: $SET.update(..., $FROM, ...)
        - pattern: $SET.intersection_update(..., $FROM, ...)
        - pattern: $SET.difference_update(..., $FROM, ...)
        - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
        - pattern: $SET.add($FROM)
        - pattern: $SET |= $FROM
        - pattern: $SET &= $FROM
        - pattern: $SET -= $FROM
        - pattern: $SET ^= $FROM
    to: $SET
  - from: $FORM
    patterns:
    - pattern: $FORM.populate_obj($OBJ)
    to: $OBJ
  pattern-sinks:
  - pattern-either:
    - patterns:
      - pattern-either:
        - pattern-either:
          - pattern: lxml.etree.XML($SINK, ...)
          - pattern: lxml.etree.XML(..., text=$SINK, ...)
          - pattern: lxml.etree.parse($SINK, ...)
          - pattern: lxml.etree.parse(..., source=$SINK, ...)
          - pattern: lxml.etree.fromstring($SINK, ...)
          - pattern: lxml.etree.fromstring(..., text=$SINK, ...)
          - pattern: lxml.etree.fromstring($XML, $SINK)
          - pattern: lxml.etree.fromstring(..., base_url=$SINK)
        - pattern-either:
          - pattern: lxml.etree.xpath($SINK, ...)
          - pattern: lxml.etree.xpath(..., _path=$SINK, ...)
          - pattern: lxml.etree.XPath($SINK, ...)
          - pattern: lxml.etree.iterparse($SINK, ...)
          - pattern: lxml.etree.iterparse(..., source=$SINK, ...)
    - patterns:
      - pattern-either:
        - pattern: lxml.etree.XMLParser(..., huge_tree=True, ...)
        - patterns:
          - pattern: lxml.etree.XMLParser(..., no_network=False, ...)
          - pattern-not: lxml.etree.XMLParser(..., load_dtd=False, ...)
          - pattern-not: lxml.etree.XMLParser(..., resolve_entities=False, ...)
      - pattern: lxml.etree.XMLParser(..., schema=$SINK, ...)
      - focus-metavariable: $SINK
    requires: __SOURCE__ and not LXML_SECURE_PARSER
  - pattern: $PARSER.feed(...)
    requires: __SOURCE__ and LXML_PARSER and not LXML_SECURE_PARSER
  - patterns:
    - pattern-either:
      - pattern: $ELEMENT.xpath($SINK, ...)
      - pattern: $ELEMENT.find($SINK, ...)
      - pattern: $ELEMENT.iterfine($SINK, ...)
      - pattern: $ELEMENT.findall($SINK, ...)
      - pattern: $ELEMENT.findtext($SINK, ...)
      - pattern: $ELEMENT.iter($SINK, ...)
    - pattern-either:
      - pattern: $ELEMENT.xpath(..., _path=$SINK)
      - pattern: $ELEMENT.find(..., path=$SINK, ...)
      - pattern: $ELEMENT.iterfind(..., path=$SINK, ...)
      - pattern: $ELEMENT.findall(..., path=$SINK, ...)
      - pattern: $ELEMENT.findtext(..., path=$SINK, ...)
      - pattern: $ELEMENT.iter(..., path=$SINK, ...)
    - focus-metavariable: $SINK
    requires: __SOURCE__ and LXML_ELEMENT
  pattern-sanitizers:
  - patterns:
    - pattern-either:
      - pattern: int(...)
      - pattern: bool(...)
      - pattern: float(...)
      - pattern: complex(...)
      - pattern: oct(...)
      - pattern: hex(...)
      - pattern: bin(...)
      - pattern: round(...)
      - pattern: id(...)
      - pattern: hash(...)
      - pattern: len(...)
      - pattern: type(...)
  - patterns:
    - pattern-either:
      - pattern-inside: '$DICT[$KEY]

          ...

          '
      - pattern-inside: '$DICT = { $KEY: $VALUE for ... in ...}

          ...

          '
      - pattern-inside: '$DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$DICT = { }

          ...

          '
      - pattern-inside: '$DICT = { $KEY: $VALUE, ... }

          ...

          '
      - pattern-inside: '$DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $DICT.clear()
      - pattern: $DICT.len()
  - patterns:
    - pattern-either:
      - pattern-inside: '$LIST = [ ... ]

          ...

          '
      - pattern-inside: '$LIST = list(...)

          ...

          '
    - pattern-either:
      - pattern: $LIST.clear()
      - pattern: $LIST.count(...)
      - pattern: $LIST.index(...)
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.len()
      - pattern: $SET.clear()
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = { $ITEM for ... in ...}

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
      - pattern-inside: '$SET = frozenset(...)

          ...

          '
      - pattern-inside: '$OTHERSET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$OTHERSET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.isdisjoint($OTHERSET)
      - pattern: $SET.difference($OTHERSET)
      - pattern: $SET.issubset($OTHERSET)
      - pattern: $SET < $OTHERSET
      - pattern: $SET <= $OTHERSET
      - pattern: $SET.issuperset($OTHERSET)
      - pattern: $SET > $OTHERSET
      - pattern: $SET >= $OTHERSET
  - patterns:
    - pattern-either:
      - pattern-inside: '$TUPLE = ( $ITEM, ... )

          ...

          '
      - pattern-inside: '$TUPLE = $ITEM, ...

          ...

          '
      - pattern-inside: '$TUPLE = tuple(...)

          ...

          '
    - pattern-either:
      - pattern: $TUPLE.len()
