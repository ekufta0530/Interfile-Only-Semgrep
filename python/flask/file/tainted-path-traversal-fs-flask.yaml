rules:
- id: tainted-path-traversal-fs-flask
  message: The application builds a file path from potentially untrusted data, which
    can lead to a path traversal vulnerability. An attacker can manipulate the path
    which the application uses to access files. If the application does not validate
    user input and sanitize file paths, sensitive files such as configuration or user
    data can be accessed, potentially creating or overwriting files. In Flask apps,
    consider using the Werkzeug util `werkzeug.utils.secure_filename()` to sanitize
    paths and filenames.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path
      Traversal'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - file::sink::file-access::fs
    - web::source::cookie::flask
    - web::source::form-data::flask
    - web::source::form-data::flask-wtf
    - web::source::form-data::wtforms
    - web::source::header::flask
    - web::source::http-body::flask
    - web::source::http-params::flask
    - web::source::url-path-params::flask
    owasp:
    - A01:2021 - Broken Access Control
    - A05:2017 - Broken Access Control
    references:
    - https://docs.pyfilesystem.org/en/latest/guide.html#opening-filesystems
    - https://flask.palletsprojects.com/en/2.3.x/patterns/fileuploads/
    - https://owasp.org/Top10/A01_2021-Broken_Access_Control
    - https://owasp.org/www-community/attacks/Path_Traversal
    - https://portswigger.net/web-security/file-path-traversal
    - https://werkzeug.palletsprojects.com/en/3.0.x/utils/#werkzeug.utils.secure_filename
    technology:
    - flask
    - flask-wtf
    - fs
    - web
    - wtforms
  languages:
  - python
  mode: taint
  options:
    interfile: true
    symbolic_propagation: true
    taint_assume_safe_booleans: true
    taint_assume_safe_numbers: true
  pattern-sources:
  - pattern-either:
    - patterns:
      - pattern: flask.request.$FUNC()
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(from_values|get_data|get_json)$
    - patterns:
      - pattern-either:
        - pattern: flask.request.$PROPERTY
        - pattern: flask.request.$PROPERTY[...]
        - pattern: flask.request.$PROPERTY.get(...)
      - metavariable-regex:
          metavariable: $PROPERTY
          regex: ^(args|cookies|data|files|form|full_path|headers|input_stream|json|path|stream|values|view_args)$
    - patterns:
      - pattern: "@$APP.$ROUTE\ndef $FUNC(..., $PARAM, ...):\n  ...\n"
      - metavariable-regex:
          metavariable: $ROUTE
          regex: ^(endpoint)$
      - focus-metavariable: $PARAM
  - patterns:
    - pattern-inside: "@$APP.$ROUTE(...)\ndef $FUNC(...):\n  ...\n"
    - pattern: $FORM.$FIELD.data
    - metavariable-regex:
        metavariable: $ROUTE
        regex: ^(route|delete|get|patch|post|put|endpoint)$
    - metavariable-type:
        metavariable: $FORM
        type: FlaskForm
  - label: FS_REGISTRY
    patterns:
    - patterns:
      - pattern-either:
        - pattern: fs.opener.registry
        - pattern: fs.opener.registry.Registry(...)
  - label: FS_OPENER
    patterns:
    - patterns:
      - pattern: $REGISTRY.get_opener(...)
    requires: FS_REGISTRY
  - label: FS_OPENER
    patterns:
    - patterns:
      - pattern-either:
        - pattern: fs.opener.base.Opener(...)
        - pattern: fs.opener.Opener(...)
  - label: TAINTED_FS
    patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: fs.open_fs($SINK, ...)
          - pattern: fs.open_fs(..., fs_url=$SINK, ...)
          - pattern: fs.open_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.open_fs($SINK, ...)
          - pattern: fs.opener.open_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.open_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.open($SINK, ...)
          - pattern: fs.opener.open(..., fs_url=$SINK, ...)
          - pattern: fs.opener.open(..., cwd=$SINK, ...)
          - pattern: fs.opener.manage_fs($SINK, ...)
          - pattern: fs.opener.manage_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.manage_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.registry.open_fs($SINK, ...)
          - pattern: fs.opener.registry.open_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.registry.open_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.registry.open($SINK, ...)
          - pattern: fs.opener.registry.open(..., fs_url=$SINK, ...)
          - pattern: fs.opener.registry.open(..., cwd=$SINK, ...)
          - pattern: fs.opener.registry.manage_fs($SINK, ...)
          - pattern: fs.opener.registry.manage_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.registry.manage_fs(..., cwd=$SINK, ...)
        - focus-metavariable: $SINK
      - patterns:
        - pattern-either:
          - pattern: fs.osfs.OSFS($SINK, ...)
          - pattern: fs.osfs.OSFS(..., root_path=$SINK, ...)
          - pattern: ftpfs.FTPFS($SINK, ...)
          - pattern: ftpfs.FTPFS(..., host=$SINK, ...)
          - pattern: fs.zipfs.ZipFS($SINK, ...)
          - pattern: fs.zipfs.ZipFS(..., file=$SINK, ...)
          - pattern: fs.tempfs.TempFS(..., temp_dir=$SINK, ...)
          - pattern: fs.tarfs.TarFS($SINK, ...)
          - pattern: fs.tarfs.TarFS(..., file=$SINK, ...)
        - focus-metavariable: $SINK
    requires: __SOURCE__
  - label: FS
    patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: fs.open_fs($SINK, ...)
          - pattern: fs.open_fs(..., fs_url=$SINK, ...)
          - pattern: fs.open_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.open_fs($SINK, ...)
          - pattern: fs.opener.open_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.open_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.open($SINK, ...)
          - pattern: fs.opener.open(..., fs_url=$SINK, ...)
          - pattern: fs.opener.open(..., cwd=$SINK, ...)
          - pattern: fs.opener.manage_fs($SINK, ...)
          - pattern: fs.opener.manage_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.manage_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.registry.open_fs($SINK, ...)
          - pattern: fs.opener.registry.open_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.registry.open_fs(..., cwd=$SINK, ...)
          - pattern: fs.opener.registry.open($SINK, ...)
          - pattern: fs.opener.registry.open(..., fs_url=$SINK, ...)
          - pattern: fs.opener.registry.open(..., cwd=$SINK, ...)
          - pattern: fs.opener.registry.manage_fs($SINK, ...)
          - pattern: fs.opener.registry.manage_fs(..., fs_url=$SINK, ...)
          - pattern: fs.opener.registry.manage_fs(..., cwd=$SINK, ...)
        - focus-metavariable: $SINK
      - patterns:
        - pattern-either:
          - pattern: fs.osfs.OSFS($SINK, ...)
          - pattern: fs.osfs.OSFS(..., root_path=$SINK, ...)
          - pattern: ftpfs.FTPFS($SINK, ...)
          - pattern: ftpfs.FTPFS(..., host=$SINK, ...)
          - pattern: fs.zipfs.ZipFS($SINK, ...)
          - pattern: fs.zipfs.ZipFS(..., file=$SINK, ...)
          - pattern: fs.tempfs.TempFS(..., temp_dir=$SINK, ...)
          - pattern: fs.tarfs.TarFS($SINK, ...)
          - pattern: fs.tarfs.TarFS(..., file=$SINK, ...)
        - focus-metavariable: $SINK
  - label: FS
    patterns:
    - patterns:
      - pattern: $OPENER.open($SINK, ...)
      - pattern: $OPENER.open(..., fs_url=$SINK, ...)
      - pattern: $OPENER.open(..., cwd=$SINK, ...)
      - pattern: $OPENER.open_fs($SINK, ...)
      - pattern: $OPENER.open_fs(..., fs_url=$SINK, ...)
      - pattern: $OPENER.open_fs(..., cwd=$SINK, ...)
      - pattern: $OPENER.manage_fs($SINK, ...)
      - pattern: $OPENER.manage_fs(..., fs_url=$SINK, ...)
      - pattern: $OPENER.manage_fs(..., cwd=$SINK, ...)
    requires: FS_OPENER
  - label: TAINTED_FS
    patterns:
    - patterns:
      - pattern: $OPENER.open($SINK, ...)
      - pattern: $OPENER.open(..., fs_url=$SINK, ...)
      - pattern: $OPENER.open(..., cwd=$SINK, ...)
      - pattern: $OPENER.open_fs($SINK, ...)
      - pattern: $OPENER.open_fs(..., fs_url=$SINK, ...)
      - pattern: $OPENER.open_fs(..., cwd=$SINK, ...)
      - pattern: $OPENER.manage_fs($SINK, ...)
      - pattern: $OPENER.manage_fs(..., fs_url=$SINK, ...)
      - pattern: $OPENER.manage_fs(..., cwd=$SINK, ...)
    requires: FS_OPENER and __SOURCE__
  pattern-propagators:
  - from: $DEFAULT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$DICT[$KEY]

            ...

            '
        - pattern-inside: '$DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$DICT = { ... }

            ...

            '
        - pattern-inside: '$DICT = dict(...)

            ...

            '
      - pattern-either:
        - pattern: $DICT.get($FIELD, $DEFAULT)
        - pattern: $DICT.setdefault($KEY, $DEFAULT)
    to: $DICT
  - from: $FROM_DICT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$TO_DICT[$KEY]

            ...

            '
        - pattern-inside: '$TO_DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$TO_DICT = { ... }

            ...

            '
        - pattern-inside: '$TO_DICT = dict(...)

            ...

            '
        - pattern-inside: '$FROM_DICT[$KEY]

            ...

            '
        - pattern-inside: '$FROM_DICT.get($KEY, $DEFAULT)

            ...

            '
        - pattern-inside: '$FROM_DICT = { ... }

            ...

            '
        - pattern-inside: '$FROM_DICT = dict(...)

            ...

            '
      - pattern-either:
        - pattern: $TO_DICT.update($FROM_DICT)
        - pattern: $TO_DICT | $FROM_DICT
        - pattern: $TO_DICT |= $FROM_DICT
    to: $TO_DICT
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$LIST = [ ... ]

            ...

            '
        - pattern-inside: '$LIST = list(...)

            ...

            '
      - pattern-either:
        - pattern: $LIST.append($FROM)
        - pattern: $LIST.extend($FROM)
        - pattern: $LIST.insert($INDEX, $FROM)
    to: $LIST
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $FROM.$LOG($SINK, ...)
        - pattern: $FROM.$LOG(..., msg=$SINK, ...)
        - pattern: $APP.logger.$LOG($SINK, ...)
      - metavariable-regex:
          metavariable: $LOG
          regex: ^(info|warning|error|critical|log|exception|handle)$
    to: $SINK
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: '$SET = { $ITEM, ... }

            ...

            '
        - pattern-inside: '$SET = set(...)

            ...

            '
        - pattern-inside: '$OTHERSET = { $ITEM, ... }

            ...

            '
        - pattern-inside: '$OTHERSET = set(...)

            ...

            '
      - pattern-either:
        - pattern: $SET.update(..., $FROM, ...)
        - pattern: $SET.intersection_update(..., $FROM, ...)
        - pattern: $SET.difference_update(..., $FROM, ...)
        - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
        - pattern: $SET.add($FROM)
        - pattern: $SET |= $FROM
        - pattern: $SET &= $FROM
        - pattern: $SET -= $FROM
        - pattern: $SET ^= $FROM
    to: $SET
  - from: $FORM
    patterns:
    - pattern: $FORM.populate_obj($OBJ)
    to: $OBJ
  - from: $FROM
    patterns:
    - pattern-either:
      - pattern: $TO.add_fs($NAME, $FROM, ...)
      - pattern: $TO.add_fs(..., fs=$FROM, ...)
      - pattern: $TO.mount($NAME, $FROM, ...)
      - pattern: $TO.mount(..., fs=$FROM, ...)
    to: $TO
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: fs.copy.$FUNC($SINK, ...)
          - pattern: fs.copy.$FUNC($FROM, $SINK, ...)
          - pattern: fs.copy.$FUNC(..., src_fs=$SINK, ...)
          - pattern: fs.copy.$FUNC(..., dst_fs=$SINK, ...)
        - metavariable-regex:
            metavariable: $FUNC
            regex: ^(copy_fs|copy_fs_if_newer|copy_fs_if|copy_structure)$
      - patterns:
        - pattern-either:
          - pattern: fs.copy.$FUNC($SINK, ...)
          - pattern: fs.copy.$FUNC($SRC_FS, $SINK, ...)
          - pattern: fs.copy.$FUNC($SRC_FS, $SRC_PATH, $SINK, ...)
          - pattern: fs.copy.$FUNC($SRC_FS, $SRC_PATH, $DST_FS, $SINK, ...)
          - pattern: fs.copy.$FUNC(..., src_fs=$SINK, ...)
          - pattern: fs.copy.$FUNC(..., src_path=$SINK, ...)
          - pattern: fs.copy.$FUNC(..., dst_fs=$SINK, ...)
          - pattern: fs.copy.$FUNC(..., dst_path=$SINK, ...)
        - metavariable-regex:
            metavariable: $FUNC
            regex: ^(copy_file|copy_file_if_newer|copy_file_if|copy_file_internal|copy_dir|copy_dir_if_newer|copy_dir_if)$
    - focus-metavariable: $SINK
    requires: __SOURCE__
  - pattern-either:
    - patterns:
      - pattern-either:
        - pattern: $FS.$FUNC($SINK, ...)
        - pattern: $FS.$FUNC(..., path=$SINK, ...)
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(glob|walk|listdir|makedir|openbin|remove|removedir|appendbytes|appendtext|create|filterdir|readbytes|readtext|makedirs|open|opendir|removetree|scandir|writebytes|writetext|touch)$
    - patterns:
      - pattern-either:
        - pattern: $FS.$FUNC($SINK, ...)
        - pattern: $FS.$FUNC($FROM, $SINK, ...)
        - pattern: $FS.$FUNC(..., src_path=$SINK, ...)
        - pattern: $FS.$FUNC(..., dst_path=$SINK, ...)
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(copy|copydir|download|movedir|move|upload|writefile)$
    requires: TAINTED_FS or (FS and __SOURCE__)
  pattern-sanitizers:
  - patterns:
    - pattern-either:
      - pattern: int(...)
      - pattern: bool(...)
      - pattern: float(...)
      - pattern: complex(...)
      - pattern: oct(...)
      - pattern: hex(...)
      - pattern: bin(...)
      - pattern: round(...)
      - pattern: id(...)
      - pattern: hash(...)
      - pattern: len(...)
      - pattern: type(...)
  - patterns:
    - pattern-either:
      - pattern-inside: '$DICT[$KEY]

          ...

          '
      - pattern-inside: '$DICT = { $KEY: $VALUE for ... in ...}

          ...

          '
      - pattern-inside: '$DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$DICT = { }

          ...

          '
      - pattern-inside: '$DICT = { $KEY: $VALUE, ... }

          ...

          '
      - pattern-inside: '$DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $DICT.clear()
      - pattern: $DICT.len()
  - patterns:
    - pattern-either:
      - pattern-inside: '$LIST = [ ... ]

          ...

          '
      - pattern-inside: '$LIST = list(...)

          ...

          '
    - pattern-either:
      - pattern: $LIST.clear()
      - pattern: $LIST.count(...)
      - pattern: $LIST.index(...)
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.len()
      - pattern: $SET.clear()
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = { $ITEM for ... in ...}

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
      - pattern-inside: '$SET = frozenset(...)

          ...

          '
      - pattern-inside: '$OTHERSET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$OTHERSET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.isdisjoint($OTHERSET)
      - pattern: $SET.difference($OTHERSET)
      - pattern: $SET.issubset($OTHERSET)
      - pattern: $SET < $OTHERSET
      - pattern: $SET <= $OTHERSET
      - pattern: $SET.issuperset($OTHERSET)
      - pattern: $SET > $OTHERSET
      - pattern: $SET >= $OTHERSET
  - patterns:
    - pattern-either:
      - pattern-inside: '$TUPLE = ( $ITEM, ... )

          ...

          '
      - pattern-inside: '$TUPLE = $ITEM, ...

          ...

          '
      - pattern-inside: '$TUPLE = tuple(...)

          ...

          '
    - pattern-either:
      - pattern: $TUPLE.len()
  - patterns:
    - pattern: werkzeug.utils.secure_filename(...)
