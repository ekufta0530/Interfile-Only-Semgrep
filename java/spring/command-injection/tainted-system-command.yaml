rules:
- id: tainted-system-command
  message: 'Untrusted input might be injected into a command executed by the application,
    which can lead to a command injection vulnerability. An attacker can execute arbitrary
    commands, potentially gaining complete control of the system. To prevent this
    vulnerability, avoid executing OS commands with user input. If this is unavoidable,
    validate and sanitize the input, and use safe methods for executing the commands.
    For more information, see: [Java command injection prevention](https://semgrep.dev/docs/cheat-sheets/java-command-injection/)'
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
      Command Injection'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - os::sink::os-command-or-thread
    - web::source::cookie::Spring
    - web::source::header::Spring
    - web::source::http-body::Spring
    - web::source::http-params::Spring
    - web::source::url-path-params::Spring
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - Spring
    - java
  languages:
  - java
  mode: taint
  options:
    interfile: true
    taint_assume_safe_booleans: true
    taint_assume_safe_numbers: true
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern: $RET $METHOD(..., @$REQ(...) $TYPE $SOURCE, ...) {...}
      - pattern: $RET $METHOD(..., @$REQ $TYPE $SOURCE, ...) {...}
    - metavariable-regex:
        metavariable: $REQ
        regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute|MatrixVariable|RequestPart|RequestAttribute)
    - focus-metavariable: $SOURCE
  - patterns:
    - pattern-either:
      - pattern-inside: '@$MAPPING(...)

          $RET $METHODNAME(..., $TYPE $SOURCE, ...) {...}

          '
      - pattern-inside: '@$MAPPING

          $RET $METHODNAME(..., $TYPE $SOURCE, ...) {...}

          '
    - pattern-either:
      - pattern: $RET $METHOD(..., String $SOURCE, ...) {...}
      - pattern: $RET $METHOD(..., org.springframework.http.HttpEntity<$X> $SOURCE,
          ...) {...}
      - pattern: $RET $METHOD(..., java.io.InputStream $SOURCE, ...) {...}
      - pattern: $RET $METHOD(..., java.io.Reader $SOURCE, ...) {...}
    - metavariable-regex:
        metavariable: $MAPPING
        regex: (ResponseBody|RequestMapping|PatchMapping|GetMapping|DeleteMapping|PutMapping|PostMapping|HttpExchange|GetExchange|PostExchange|PutExchange|PatchExchange|DeleteExchange|ResponseStatus)
    - focus-metavariable: $SOURCE
  - patterns:
    - pattern-either:
      - pattern: (org.springframework.web.context.request.WebRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.web.context.request.NativeWebRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.web.context.request.FacesWebRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.web.context.request.ServletWebRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.web.servlet.handler.DispatcherServletWebRequest
          $REQ).$METHOD(...)
      - pattern: (org.springframework.web.context.request.async.AsyncWebRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.web.context.request.async.StandardServletAsyncWebRequest
          $REQ).$METHOD(...)
    - metavariable-regex:
        metavariable: $METHOD
        regex: (getHeader|getHeaderNames|getHeaderValues|getParameter|getParameterMap|getParameterNames|getParameterValues|getAttribute|getAttributeNames)
  - patterns:
    - pattern-either:
      - pattern: (org.springframework.http.HttpRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.http.client.ClientHttpRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.http.server.ServerHttpRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.http.server.ServletServerHttpRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.web.multipart.support.RequestPartServletServerHttpRequest
          $REQ).$METHOD(...)
      - pattern: (org.springframework.http.server.reactive.ServerHttpRequest $REQ).$METHOD(...)
      - pattern: (org.springframework.http.server.reactive.ServerHttpRequestDecorator
          $REQ).$METHOD(...)
    - metavariable-regex:
        metavariable: $METHOD
        regex: (getPath|getQueryParams|getBody|getURI|getHeaders|getCookies)
  - patterns:
    - pattern-either:
      - pattern: (javax.servlet.ServletRequest $REQ).$METHOD(...)
      - pattern: (javax.servlet.http.HttpServletRequest $REQ).$METHOD(...)
      - pattern: (jakarta.servlet.ServletRequest $REQ).$METHOD(...)
      - pattern: (jakarta.servlet.http.HttpServletRequest $REQ).$METHOD(...)
    - metavariable-regex:
        metavariable: $METHOD
        regex: (getInputStream|getParameter|getParameterMap|getParameterValues|getReader|getCookies|getHeader|getHeaderNames|getHeaders|getPart|getParts|getQueryString|getPathInfo)
  pattern-propagators:
  - from: $FROM
    patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: (java.util.List $TO).$METHOD(...)
          - pattern: (java.util.List<$E> $TO).$METHOD(...)
          - pattern: (java.util.Stack $TO).$METHOD(...)
          - pattern: (java.util.Stack<$E> $TO).$METHOD(...)
          - pattern: (java.util.Vector $TO).$METHOD(...)
          - pattern: (java.util.Vector<$E> $TO).$METHOD(...)
          - pattern: (java.util.ArrayList $TO).$METHOD(...)
          - pattern: (java.util.ArrayList<$E> $TO).$METHOD(...)
          - pattern: (java.util.LinkedList $TO).$METHOD(...)
          - pattern: (java.util.LinkedList<$E> $TO).$METHOD(...)
          - pattern: (java.util.AbstractList $TO).$METHOD(...)
          - pattern: (java.util.AbstractList<$E> $TO).$METHOD(...)
          - pattern: (java.util.AbstractSequentialList $TO).$METHOD(...)
          - pattern: (java.util.AbstractSequentialList<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.CopyOnWriteArrayList $TO).$METHOD(...)
          - pattern: (java.util.concurrent.CopyOnWriteArrayList<$E> $TO).$METHOD(...)
        - pattern-either:
          - pattern: $TO.add($FROM)
          - pattern: $TO.add($X, $FROM)
          - pattern: $TO.addAll($FROM)
          - pattern: $TO.addAll($X, $FROM)
          - pattern: $TO.addFirst(..., $FROM, ...)
          - pattern: $TO.addLast(..., $FROM, ...)
          - pattern: $TO.addAllAbsent(..., $FROM, ...)
          - pattern: $TO.addIfAbsent(..., $FROM, ...)
          - pattern: $TO.addElement(..., $FROM, ...)
          - pattern: $TO.set($X, $FROM)
          - pattern: $TO.push(..., $FROM, ...)
          - pattern: $TO.setElementAt(..., $FROM, ...)
          - pattern: $TO.replaceAll(..., $FROM, ...)
          - pattern: $TO.insertElementAt($FROM, ...)
      - patterns:
        - pattern-either:
          - pattern: (java.util.Queue $TO).$METHOD(...)
          - pattern: (java.util.Queue<$E> $TO).$METHOD(...)
          - pattern: (java.util.Deque $TO).$METHOD(...)
          - pattern: (java.util.Deque<$E> $TO).$METHOD(...)
          - pattern: (java.util.ArrayDeque $TO).$METHOD(...)
          - pattern: (java.util.ArrayDeque<$E> $TO).$METHOD(...)
          - pattern: (java.util.AbstractQueue $TO).$METHOD(...)
          - pattern: (java.util.AbstractQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.DelayQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.DelayQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.BlockingQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.BlockingQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.TransferQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.TransferQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.BlockingDeque $TO).$METHOD(...)
          - pattern: (java.util.concurrent.BlockingDeque<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.SynchronousQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.SynchronousQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.LinkedTransferQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.LinkedTransferQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ArrayBlockingQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ArrayBlockingQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.LinkedBlockingDeque $TO).$METHOD(...)
          - pattern: (java.util.concurrent.LinkedBlockingDeque<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.LinkedBlockingQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.LinkedBlockingQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.PriorityBlockingQueue $TO).$METHOD(...)
          - pattern: (java.util.concurrent.PriorityBlockingQueue<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentLinkedDeque $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentLinkedDeque<$E> $TO).$METHOD(...)
        - pattern-either:
          - pattern: $TO.add(..., $FROM, ...)
          - pattern: $TO.addFirst(..., $FROM, ...)
          - pattern: $TO.addLast(..., $FROM, ...)
          - pattern: $TO.addAll(..., $FROM, ...)
          - pattern: $TO.put(..., $FROM, ...)
          - pattern: $TO.putLast(..., $FROM, ...)
          - pattern: $TO.putFirst(..., $FROM, ...)
          - pattern: $TO.push(..., $FROM, ...)
          - pattern: $TO.offer($FROM, ...)
          - pattern: $TO.offerLast($FROM, ...)
          - pattern: $TO.offerFirst($FROM, ...)
      - patterns:
        - pattern-either:
          - pattern: (java.util.Set $TO).$METHOD(...)
          - pattern: (java.util.Set<$E> $TO).$METHOD(...)
          - pattern: (java.util.TreeSet $TO).$METHOD(...)
          - pattern: (java.util.TreeSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.EnumSet $TO).$METHOD(...)
          - pattern: (java.util.EnumSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.HashSet $TO).$METHOD(...)
          - pattern: (java.util.HashSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.SortedSet $TO).$METHOD(...)
          - pattern: (java.util.SortedSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.AbstractSet $TO).$METHOD(...)
          - pattern: (java.util.AbstractSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.NavigableSet $TO).$METHOD(...)
          - pattern: (java.util.NavigableSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.LinkedHashSet $TO).$METHOD(...)
          - pattern: (java.util.LinkedHashSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.AbstractCollection $TO).$METHOD(...)
          - pattern: (java.util.AbstractCollection<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.CopyOnWriteArraySet $TO).$METHOD(...)
          - pattern: (java.util.concurrent.CopyOnWriteArraySet<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentSkipListSet $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentSkipListSet<$E> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentHashMap.KeySetView $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentHashMap.KeySetView<$E> $TO).$METHOD(...)
        - pattern-either:
          - pattern: $TO.add(..., $FROM, ...)
          - pattern: $TO.addAll(..., $FROM, ...)
      - patterns:
        - pattern-either:
          - pattern: (java.util.Map $TO).$METHOD(...)
          - pattern: (java.util.Map<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.NavigableMap $TO).$METHOD(...)
          - pattern: (java.util.NavigableMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.SortedMap $TO).$METHOD(...)
          - pattern: (java.util.SortedMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.TreeMap $TO).$METHOD(...)
          - pattern: (java.util.TreeMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.AbstractMap $TO).$METHOD(...)
          - pattern: (java.util.AbstractMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.EnumMap $TO).$METHOD(...)
          - pattern: (java.util.EnumMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.HashMap $TO).$METHOD(...)
          - pattern: (java.util.HashMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.Hashtable $TO).$METHOD(...)
          - pattern: (java.util.Hashtable<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.IdentityHashMap $TO).$METHOD(...)
          - pattern: (java.util.IdentityHashMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.LinkedHashMap $TO).$METHOD(...)
          - pattern: (java.util.LinkedHashMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.WeakHashMap $TO).$METHOD(...)
          - pattern: (java.util.WeakHashMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentMap $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentHashMap $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentHashMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentSkipListMap $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentSkipListMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentNavigableMap $TO).$METHOD(...)
          - pattern: (java.util.concurrent.ConcurrentNavigableMap<$K, $V> $TO).$METHOD(...)
          - pattern: (java.util.Properties $TO).$METHOD(...)
          - pattern: (java.util.Properties<$K, $V> $TO).$METHOD(...)
        - pattern-either:
          - pattern: $TO.merge(..., $FROM, ...)
          - pattern: $TO.put(..., $FROM, ...)
          - pattern: $TO.putAll(..., $FROM, ...)
          - pattern: $TO.putIfAbsent(..., $FROM, ...)
          - pattern: $TO.replace($X, ..., $FROM, ...)
          - pattern: $TO.replaceAll(..., $FROM, ...)
    to: $TO
  - from: $INPUT
    patterns:
    - pattern-either:
      - pattern: String.format($FMT, ..., $INPUT, ...)
      - pattern: MessageFormat.format($FMT, ..., $INPUT, ...)
    to: $FMT
  - from: $FROM
    patterns:
    - pattern-either:
      - pattern: (StringBuilder $TO).append($FROM, ...)
      - pattern: (StringBuilder $TO).insert($OFFSET, $FROM, ...)
      - pattern: (StringBuilder $TO).replace($START, $END, $FROM, ...)
      - pattern: (StringBuffer $TO).append($FROM, ...)
      - pattern: (StringBuffer $TO).insert($OFFSET, $FROM, ...)
    to: $TO
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: Runtime.getRuntime(...).$EXEC($CMD,...)
      - pattern: (Runtime $R).$EXEC($CMD,...)
    - metavariable-regex:
        metavariable: $EXEC
        regex: (exec|loadLibrary|load)
    - focus-metavariable: $CMD
  - patterns:
    - pattern-either:
      - pattern: new ProcessBuilder($CMD,...)
      - pattern: new ProcessBuilder(...). ... .command($CMD,...)
      - pattern: (ProcessBuilder $P). ... .command($CMD,...)
    - focus-metavariable: $CMD
  - patterns:
    - pattern-either:
      - pattern: new ProcessBuilder($SH, "-c", $CMD,...)
      - pattern: new ProcessBuilder(...). ... .command($SH, "-c", $CMD,...)
      - pattern: (ProcessBuilder $P). ... .command($SH, "-c", $CMD,...)
    - metavariable-regex:
        metavariable: $SH
        regex: .*\/?(bash|csh|dash|fish|ksh|tcsh|sh|zsh)\"?$
    - focus-metavariable: $CMD
  pattern-sanitizers:
  - pattern: (ChoiceFormat $X).format(...)
  - pattern: (DecimalFormat $X).format(...)
  - pattern: (java.util.UUID $X)
